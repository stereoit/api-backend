openapi: 3.0.0
info:
  title: "Eventival API"
  version: "1.0.0"
  contact:
    name: Robert Smol
    email: robert.smol@stereoit.com

servers:
  - url: http://localhost:8000
    description: Localhost server

paths:
  /hello:
    get:
      operationId: getHello
      summary: Simple hello message endpoint
      responses:
        '200':
          description: OK
          content: 
            text/plain:
              schema:
                type: string
              example: Hello

  /users:
    description: >
      This resource represents collection of users.

    get:
      operationId: getAllUsers
      summary: Fetch all users without any pagination
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
                
    post:
      operationId: registerNewUser
      summary: Register a new user
      requestBody:
        description: Newly created user
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '409':
          description: Duplicate user


components:
  schemas:
    Error:
      type: object
      properties:
        timestamp:
          type: number
          format: int64
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
      example:
        - timestamp: 1564913610
          status: 401
          error: 'Not Found'
          message: 'No message available'
          path: '/api/v1/users/99245040-f25d-4c6b-af37-6c0477bfd5d1'

    UserRequest:
      type: object
      properties:
        email:
          type: string
          description: User's primary email address
      example:
        email: user@example.com

    UserResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the user in UUIDv4 format
        email:
          type: string
          description: User's primary email address
      example:
        id: "cceb464d-b689-11e9-872d-1c3947113383"
        email: "user1@example.com"

    UserListResponse:
      type: array
      minItems: 0
      items:
        $ref: '#/components/schemas/UserResponse'
      example:
        - id: "cceb464d-b689-11e9-872d-1c3947113383"
          email: "user1@example.com"
        - id: "bc554f60-761e-482b-8f20-d56dc5c01951"
          email: "user2@example.com"

        

  responses:
    GenericError:
      description: An error occured.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
